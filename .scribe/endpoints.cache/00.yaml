## Autogenerated by Scribe. DO NOT MODIFY.

name: Expenses
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/expenses
    metadata:
      title: 'GET Paginated list'
      description: |-
        <br><b>Available fields for sorting:</b>
             - <code>id</code>
             - <code>expenses_type_id</code>
             - <code>value</code>

        <br><b>Available fields for filtering:</b>
             - <code>expenses_type_id</code>
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters:
      per_page:
        name: per_page
        description: 'Page size: how many items per page.'
        required: false
        example: 2
        type: integer
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
      sort:
        name: sort
        description: 'Sorting parameter [value, -value].'
        required: false
        example: value
        type: string
      'filter[expenses_type_id]':
        name: 'filter[expenses_type_id]'
        description: 'Filters by e.g. product_name <code>filter[expanses_type_id]=4</code>.'
        required: false
        example: '4'
        type: string
    bodyParameters: []
    responses:
      -
        status: 400
        content: '{"errors": [{"status": 400, "title": "Bad Request", "detail": "Requested filter(s) `expenses_type_id3` are not allowed. Allowed filter(s) are `expenses_type_id`.","source": { "pointer": "/api/expenses/", "method": "GET"}}]}'
        headers: []
        description: '400, Wrong parameter for filter'
      -
        status: 200
        content: '{"data":[{"expense_id":3,"expense_value":145.89,"expense_description":"Lorem ipsum","expense_type":{"id":2,"description":"Food"}},{"expense_id":9,"expense_value":2344.47,"expense_description":"Reiciendis et autem est.","expense_type":{"id":4,"description":"Transport"}}],"links":{"first":"http:\/\/localhost:10222\/api\/expenses?per_page=2&sort=value&filter%5Bexpenses_type_id%5D=4&page=1","last":"http:\/\/localhost:10222\/api\/expenses?per_page=2&sort=value&filter%5Bexpenses_type_id%5D=4&page=5","prev":null,"next":"http:\/\/localhost:10222\/api\/expenses?per_page=2&sort=value&filter%5Bexpenses_type_id%5D=4&page=2"},"meta":{"current_page":1,"from":1,"last_page":5,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost:10222\/api\/expenses?per_page=2&sort=value&filter%5Bexpenses_type_id%5D=4&page=1","label":"1","active":true},{"url":"http:\/\/localhost:10222\/api\/expenses?per_page=2&sort=value&filter%5Bexpenses_type_id%5D=4&page=2","label":"2","active":false},{"url":"http:\/\/localhost:10222\/api\/expenses?per_page=2&sort=value&filter%5Bexpenses_type_id%5D=4&page=3","label":"3","active":false},{"url":"http:\/\/localhost:10222\/api\/expenses?per_page=2&sort=value&filter%5Bexpenses_type_id%5D=4&page=4","label":"4","active":false},{"url":"http:\/\/localhost:10222\/api\/expenses?per_page=2&sort=value&filter%5Bexpenses_type_id%5D=4&page=5","label":"5","active":false},{"url":"http:\/\/localhost:10222\/api\/expenses?per_page=2&sort=value&filter%5Bexpenses_type_id%5D=4&page=2","label":"Next &raquo;","active":false}],"path":"http:\/\/localhost:10222\/api\/expenses","per_page":2,"to":2,"total":10}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '57'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/expenses/{id}'
    metadata:
      title: 'GET Single item.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the expense.'
        required: true
        example: 5
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 400
        content: '{"errors": [{"status": 400, "title": "Bad Request", "detail": "Attempt to read property \"id\" on null.","source": { "pointer": "/api/expenses/", "method": "GET"}}]}'
        headers: []
        description: '400, Wrong parameter for filter'
      -
        status: 200
        content: '{"data":{"expense_id":1,"expense_value":2825.55,"expense_description":"Qui illo et dolorum eum.","expense_type":{"id":1,"description":"Entertainment"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '56'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/expenses/{id}'
    metadata:
      title: 'PUT Update'
      description: |-
        Update resource based on request.
        If success then response includes properties from Groups "edit".

        <aside class="notice"><b>Try it out</b> - The <b>value</b> in documentation gets only integer. Seems to be a new bug. </aside>
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Identifier (PK) value.'
        required: true
        example: 2
        type: integer
    queryParameters: []
    bodyParameters:
      value:
        name: value
        description: 'Must be at least 0.01.'
        required: true
        example: 0
        type: number
      description:
        name: description
        description: 'Must be at least 3 characters. Must not be greater than 250 characters.'
        required: true
        example: famulsjsaemewscterjmfrpyswhbsspfnhxludonjwqscqdncegolpgbpjknkkvkvpdxhshexphdocgmpjvtmrejjyaudifduluxujaokatngbxpyunguikkdryffkgmesdyxyurjogigcrs
        type: string
      expenses_type_id:
        name: expenses_type_id
        description: 'Must be at least 1. Must not be greater than 5.'
        required: true
        example: 5
        type: integer
    responses: []
    responseFields: []
